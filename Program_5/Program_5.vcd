$date
	Mon Oct 16 15:46:13 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module stimulus $end
$var wire 8 ! out [7:0] $end
$var wire 1 " overflow $end
$var reg 8 # in1 [7:0] $end
$var reg 8 $ in2 [7:0] $end
$var reg 1 % m $end
$var integer 32 & n [31:0] $end
$scope module uut $end
$var wire 8 ' cout [7:0] $end
$var wire 8 ( in1 [7:0] $end
$var wire 8 ) in2 [7:0] $end
$var wire 1 * m $end
$var wire 32 + n [32:1] $end
$var wire 8 , out [7:0] $end
$var reg 8 - in22 [7:0] $end
$var reg 1 . overflow $end
$scope module uut1 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 * cin $end
$var reg 1 1 cout $end
$var reg 1 2 sum $end
$upscope $end
$scope begin generate_block[1] $end
$scope module uut2 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 cin $end
$var reg 1 6 cout $end
$var reg 1 7 sum $end
$upscope $end
$upscope $end
$scope begin generate_block[2] $end
$scope module uut2 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : cin $end
$var reg 1 ; cout $end
$var reg 1 < sum $end
$upscope $end
$upscope $end
$scope begin generate_block[3] $end
$scope module uut2 $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 ? cin $end
$var reg 1 @ cout $end
$var reg 1 A sum $end
$upscope $end
$upscope $end
$scope begin generate_block[4] $end
$scope module uut2 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 D cin $end
$var reg 1 E cout $end
$var reg 1 F sum $end
$upscope $end
$upscope $end
$scope begin generate_block[5] $end
$scope module uut2 $end
$var wire 1 G a $end
$var wire 1 H b $end
$var wire 1 I cin $end
$var reg 1 J cout $end
$var reg 1 K sum $end
$upscope $end
$upscope $end
$scope begin generate_block[6] $end
$scope module uut2 $end
$var wire 1 L a $end
$var wire 1 M b $end
$var wire 1 N cin $end
$var reg 1 O cout $end
$var reg 1 P sum $end
$upscope $end
$upscope $end
$scope begin generate_block[7] $end
$scope module uut2 $end
$var wire 1 Q a $end
$var wire 1 R b $end
$var wire 1 S cin $end
$var reg 1 T cout $end
$var reg 1 U sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
12
01
10
0/
0.
b1 -
b1 ,
b1 +
0*
b1 )
b0 (
b0 '
b1 &
0%
b1 $
b0 #
0"
b1 !
$end
#10000
17
b11 !
b11 ,
b1 -
13
b10 #
b10 (
b10 &
b10 +
#20000
1A
1?
02
07
b1000 !
b1000 ,
1;
b100 '
1.
1"
b100 -
19
00
03
18
b100 $
b100 )
b100 #
b100 (
b11 &
b11 +
#30000
1.
1"
1:
1A
16
1?
15
07
1;
0<
b1000 !
b1000 ,
11
b111 '
b111 -
14
10
08
1/
b111 $
b111 )
b1 #
b1 (
b100 &
b100 +
#40000
0?
0K
0;
1<
0I
0:
0E
06
17
0D
05
0@
1A
1F
b11110 !
b11110 ,
01
b0 '
0.
0"
b1110 -
1>
00
1B
0/
b1110 $
b1110 )
b10000 #
b10000 (
b101 &
b101 +
#50000
1P
1N
1J
1I
1?
1A
1E
0F
1;
b110100 '
0<
0K
b1001010 !
b1001010 ,
b10100 -
04
0>
1C
13
18
1G
b10100 $
b10100 )
b110110 #
b110110 (
b110 &
b110 +
#60000
1F
1D
0I
15
0K
17
b1011010 !
b1011010 ,
1@
0E
11
b101101 '
1.
1"
b101101 -
1>
0C
1H
10
03
1=
0B
1/
b101101 $
b101101 )
b101101 #
b101101 (
b111 &
b111 +
#70000
0A
1P
1T
07
0?
1N
1I
1S
05
0;
1<
1J
0K
0U
1E
0F
b1000100 !
b1000100 ,
1O
01
b11111000 '
0.
0"
b11001000 -
09
0H
1M
1R
00
1B
1L
0/
b11001000 $
b11001000 )
b1111100 #
b1111100 (
b1000 &
b1000 +
#80000
0P
17
0D
0I
0N
0S
15
0T
0U
0<
0@
0E
0F
0J
0K
b10 !
b10 ,
0O
11
b1 '
b11111110 -
0>
0M
0R
10
08
0=
0B
0G
0L
1%
1*
b1 $
b1 )
b0 #
b0 (
b1 &
b1 +
#90000
1<
1.
1"
1:
16
b11 '
07
b100 !
b100 ,
b11111110 -
13
b10 #
b10 (
b10 &
b10 +
#100000
0<
1A
05
0:
1?
01
12
06
07
b1001 !
b1001 ,
1;
b100 '
0.
0"
b11111011 -
19
00
03
18
b100 $
b100 )
b100 #
b100 (
b11 &
b11 +
#110000
1:
1A
16
1?
15
07
1;
0<
b1001 !
b1001 ,
11
b111 '
b11111000 -
14
10
08
1/
b111 $
b111 )
b1 #
b1 (
b100 &
b100 +
#120000
0?
0K
0;
1<
0I
0:
0E
06
17
0D
05
0@
1A
1F
b11111 !
b11111 ,
01
b0 '
0.
0"
b11110001 -
1>
00
1B
0/
b1110 $
b1110 )
b10000 #
b10000 (
b101 &
b101 +
#130000
1P
1N
1J
1I
1?
1A
1E
0F
1;
b110100 '
0<
0K
b1001011 !
b1001011 ,
1.
1"
b11101011 -
04
0>
1C
13
18
1G
b10100 $
b10100 )
b110110 #
b110110 (
b110 &
b110 +
#140000
1F
1D
0I
15
0K
17
b1011011 !
b1011011 ,
1@
0E
11
b101101 '
0.
0"
b11010010 -
1>
0C
1H
10
03
1=
0B
1/
b101101 $
b101101 )
b101101 #
b101101 (
b111 &
b111 +
#150000
0A
1P
1T
07
0.
0"
0?
1N
1I
1S
05
0;
1<
1J
0K
0U
1E
0F
b1000101 !
b1000101 ,
1O
01
b11111000 '
b110111 -
09
0H
1M
1R
00
1B
1L
0/
b11001000 $
b11001000 )
b1111100 #
b1111100 (
b1000 &
b1000 +
#160000
